{"version":3,"file":"hopin-styleguide__js-colors.js","sources":["../ts/_friendly-name.ts","../ts/_variable-group.ts","../ts/_clipboard.ts","../ts/hopin-styleguide__js-colors.ts"],"sourcesContent":["export function friendlyName(varName: string): string {\n  const parts = varName.split(/_|-/g);\n  const words: string[] = [];\n  for (const p of parts) {\n    if (p == '') {\n      continue;\n    }\n\n    words.push(p.charAt(0).toUpperCase()  + p.slice(1).toLowerCase());\n  }\n  return words.join(' ');\n}\n\nexport function friendlyNameFromURL(urlString: string, fileSuffix: string): string {\n  const filenameWithExt = urlString.substring(urlString.lastIndexOf('/')+1);\n  const filename = filenameWithExt.substring(0, filenameWithExt.lastIndexOf(fileSuffix));\n  return friendlyName(filename);\n}","import { friendlyName, friendlyNameFromURL } from \"./_friendly-name\";\n\nconst GROUP_CONTAINER_CLASS = '__hopin__variable-group';\nconst GROUP_TITLE_CLASS = '__hopin__variable-group__title';\n\nexport abstract class VariableGroup {\n    constructor(private containerClass: string, private fileSuffix: string) {}\n\n    getGroups(): Group[] {\n        const groups: Group[] = [];\n        for (const s of document.styleSheets) {\n            try {\n                if (!s.href) {\n                    continue;\n                }\n\n                if (s.href.lastIndexOf(this.fileSuffix) !== s.href.length - this.fileSuffix.length) {\n                    continue;\n                }\n\n                const group: Group = {\n                    prettyName: friendlyNameFromURL(s.href, this.fileSuffix),\n                    href: s.href,\n                    variables: [],\n                };\n\n                const cssStylesheet = s as CSSStyleSheet;\n                for (const r of cssStylesheet.cssRules) {\n                    const cssStyleRule = r as {\n                        styleMap?: StyleMap\n                    };\n                    if (cssStyleRule['styleMap']) {\n                        const map = cssStyleRule['styleMap'];\n                        for (const e of map.entries()) {\n                            // The format of e is [\"<param name>\", [[\"<value>\"]]]\n                            const name = e[0] as string;\n                            if (name.indexOf('--') === 0) {\n                                let unparsedValue = e[1][0] as CSSUnparsedValue;\n                                group.variables.push({\n                                    prettyName: friendlyName(name),\n                                    variableName: name,\n                                    value: unparsedValue.toString(),\n                                });\n                            }\n                        }\n                    }\n                }\n                groups.push(group);\n            } catch (err) {\n                // External stylesheets will not be accessible from JavaScript\n                // in which case this error will be thrown.\n                console.error(`Unable to read styles for ${s.href}`, err);\n            }\n        }\n        return groups;\n    }\n\n    render() {\n        const containerElement = document.querySelector(`.${this.containerClass}`);\n        if (!containerElement) {\n            console.warn(`Unable to find container with class ${this.containerClass}`)\n            return;\n        }\n\n        const groups = this.getGroups();\n        console.log(`Rendering the following groups:`, groups);\n        for (const g of groups) {\n            const groupContainer = document.createElement('section');\n            groupContainer.classList.add(GROUP_CONTAINER_CLASS);\n\n            if (g.prettyName) {\n                const title = document.createElement('h2');\n                title.classList.add(GROUP_TITLE_CLASS);\n                title.textContent = g.prettyName;\n                groupContainer.appendChild(title);\n            }\n\n            const elements = this.renderData(g.variables);\n            for (const e of elements) {\n                groupContainer.appendChild(e);\n            }\n            containerElement.appendChild(groupContainer);\n        } \n    }\n\n    abstract renderData(variables: Variable[]): HTMLElement[];\n} \n\ninterface Group {\n    prettyName: string|null;\n    href: string;\n    variables: Variable[];\n}\n\nexport interface Variable {\n    prettyName: string|null;\n    variableName: string;\n    value: string;\n}\n\ninterface StyleMap {\n    entries: () => Array<string|Array<string>>;\n}","export function copyToClipboard(txt: string): boolean {\n  const hiddenElement = document.createElement('div');\n  hiddenElement.textContent = txt;\n  document.body.appendChild(hiddenElement);\n\n  var range = document.createRange();\n  range.selectNode(hiddenElement);\n\n  window.getSelection().empty()\n  window.getSelection().addRange(range);\n\n  let success = false;\n  try {\n    // Now that we've selected the anchor text, execute the copy command\n    success = document.execCommand('copy');\n  } catch(err) {\n    console.log('Error thrown when copying text: ', err);\n  }\n\n  // Remove the selections\n  window.getSelection().removeRange(range);\n  document.body.removeChild(hiddenElement);\n\n  return success;\n}","import {VariableGroup, Variable} from './_variable-group';\nimport {copyToClipboard} from './_clipboard';\n\nconst COLORS_SUFFIX = 'colors.css';\nconst COLORS_CONTAINER = '__hopin__js-colors';\nconst SWATCH_GROUP_CLASS = '__hopin__c-swatch-group';\nconst SWATCH_CLASS = '__hopin__c-swatch';\nconst SWATCH_HEX_CLASS = '__hopin__c-swatch__hex-value';\nconst SWATCH_VAR_NAME_CLASS = '__hopin__c-swatch__var-value';\nconst SWATCH_HEX_LIGHT_COLOR = '__hopin__c-swatch__hex--light-color';\nconst SWATCH_HEX_DARK_COLOR = '__hopin__c-swatch__hex--dark-color';\nconst SWATCH_COLOR_CLASS = '__hopin__c-swatch__color';\nconst SWATCH_FOOTER_CLASS = '__hopin__c-swatch__footer';\nconst SWATCH_NAME_CLASS = '__hopin__c-swatch__name';\nconst SWATCH_COPY_CLASS = '__hopin__c-swatch__copytext';\n\nclass ColorPalette extends VariableGroup {\n    constructor() {\n        super(COLORS_CONTAINER, COLORS_SUFFIX);\n    }\n\n    renderData(variables: Variable[]): HTMLElement[] {\n        const swatchGroup = document.createElement('div');\n        swatchGroup.classList.add(SWATCH_GROUP_CLASS);\n        for (const v of variables) {\n            // Use c.value to get the actual color value\n            const hexValue = document.createElement('span');\n            hexValue.classList.add(SWATCH_HEX_CLASS);\n            hexValue.textContent = v.value;\n    \n            const varName = document.createElement('span');\n            varName.classList.add(SWATCH_VAR_NAME_CLASS);\n            varName.textContent = v.variableName;\n    \n            // TODO: Use specific fonts applied to text instead of black and white\n            const distanceToBlack = this.distance(this.hexToRGB(v.value), this.hexToRGB('#000000'));\n            const distanceToWhite = this.distance(this.hexToRGB(v.value), this.hexToRGB('#FFFFFF'));\n\n            if (distanceToBlack > distanceToWhite) {\n              hexValue.classList.add(SWATCH_HEX_DARK_COLOR);\n              varName.classList.add(SWATCH_HEX_DARK_COLOR);\n            } else {\n              hexValue.classList.add(SWATCH_HEX_LIGHT_COLOR);\n              varName.classList.add(SWATCH_HEX_LIGHT_COLOR);\n            }\n    \n            const swatchColor = document.createElement('div');\n            swatchColor.classList.add(SWATCH_COLOR_CLASS);\n            swatchColor.style.backgroundColor = `var(${v.variableName})`;\n            swatchColor.appendChild(varName);\n            swatchColor.appendChild(hexValue);\n    \n            const swatchFooter = document.createElement('div');\n            swatchFooter.classList.add(SWATCH_FOOTER_CLASS);\n    \n            const colorName = document.createElement('span');\n            colorName.classList.add(SWATCH_NAME_CLASS);\n            colorName.textContent = v.prettyName;\n    \n            const copyText = document.createElement('div');\n            copyText.classList.add(SWATCH_COPY_CLASS);\n            copyText.textContent = 'Copy';\n    \n            swatchFooter.appendChild(colorName);\n            swatchFooter.appendChild(copyText);\n    \n            const swatch = document.createElement('div');\n            swatch.classList.add(SWATCH_CLASS);\n            swatch.appendChild(swatchColor);\n            swatch.appendChild(swatchFooter);\n            swatch.addEventListener('click', (e) => {\n              e.preventDefault();\n              // TODO: Disable it such that you can't copy\n              // multiple times.\n              const success = copyToClipboard(v.variableName);\n              if (success) {\n                copyText.textContent = 'Copied';\n                setTimeout(() => {\n                  copyText.textContent = 'Copy';\n                }, 1000);\n              }\n            });\n    \n            swatchGroup.appendChild(swatch);\n        }\n        return [swatchGroup];\n    }\n\n    hexToRGB(hex: string): RGBColor {\n        const hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n        let result = hexRegex.exec(hex.trim());\n        if (!result) {\n          // Try 3 hex\n          const shortHexRegex = /^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i;\n          result = shortHexRegex.exec(hex.trim());\n          if (!result) {\n            throw new Error(`Unable to parse hex string '${hex}'`);\n          }\n          result[1] = `${result[1]}${result[1]}`;\n          result[2] = `${result[2]}${result[2]}`;\n          result[3] = `${result[3]}${result[3]}`;\n        }\n        return {\n          Red: parseInt(result[1], 16),\n          Green: parseInt(result[2], 16),\n          Blue: parseInt(result[3], 16),\n        }\n      }\n    \n      distance(c1: RGBColor, c2: RGBColor): number {\n        const d = Math.pow((c1.Red - c2.Red), 2) +\n        Math.pow((c1.Green - c2.Green), 2) +\n        Math.pow((c1.Blue - c2.Blue), 2);\n        return Math.sqrt(d);\n      }\n}\n\nwindow.addEventListener('load', function() {\n    new ColorPalette().render();\n});\n\ninterface RGBColor {\n    Red: number;\n    Green: number;\n    Blue: number;\n  }"],"names":["friendlyName","varName","parts","split","words","p","push","charAt","toUpperCase","slice","toLowerCase","join","friendlyNameFromURL","urlString","fileSuffix","filenameWithExt","substring","lastIndexOf","GROUP_CONTAINER_CLASS","GROUP_TITLE_CLASS","VariableGroup","[object Object]","containerClass","this","groups","s","document","styleSheets","href","length","group","prettyName","variables","cssStylesheet","r","cssRules","cssStyleRule","map","e","entries","name","indexOf","unparsedValue","variableName","value","toString","err","console","error","containerElement","querySelector","warn","getGroups","log","g","groupContainer","createElement","classList","add","title","textContent","appendChild","elements","renderData","copyToClipboard","txt","hiddenElement","body","range","createRange","selectNode","window","getSelection","empty","addRange","success","execCommand","removeRange","removeChild","COLORS_SUFFIX","COLORS_CONTAINER","SWATCH_GROUP_CLASS","SWATCH_CLASS","SWATCH_HEX_CLASS","SWATCH_VAR_NAME_CLASS","SWATCH_HEX_LIGHT_COLOR","SWATCH_HEX_DARK_COLOR","SWATCH_COLOR_CLASS","SWATCH_FOOTER_CLASS","SWATCH_NAME_CLASS","SWATCH_COPY_CLASS","ColorPalette","super","swatchGroup","v","hexValue","distance","hexToRGB","swatchColor","style","backgroundColor","swatchFooter","colorName","copyText","swatch","addEventListener","preventDefault","setTimeout","hex","result","exec","trim","Error","Red","parseInt","Green","Blue","c1","c2","d","Math","pow","sqrt","render"],"mappings":"kCAAgBA,EAAaC,GAC3B,MAAMC,EAAQD,EAAQE,MAAM,QACtBC,EAAkB,GACxB,IAAK,MAAMC,KAAKH,EACL,IAALG,GAIJD,EAAME,KAAKD,EAAEE,OAAO,GAAGC,cAAiBH,EAAEI,MAAM,GAAGC,eAErD,OAAON,EAAMO,KAAK,cAGJC,EAAoBC,EAAmBC,GACrD,MAAMC,EAAkBF,EAAUG,UAAUH,EAAUI,YAAY,KAAK,GAEvE,OAAOjB,EADUe,EAAgBC,UAAU,EAAGD,EAAgBE,YAAYH,KCb5E,MAAMI,EAAwB,0BACxBC,EAAoB,uCAEJC,EAClBC,YAAoBC,EAAgCR,GAAhCS,oBAAAD,EAAgCC,gBAAAT,EAEpDO,YACI,MAAMG,EAAkB,GACxB,IAAK,MAAMC,KAAKC,SAASC,YACrB,IACI,IAAKF,EAAEG,KACH,SAGJ,GAAIH,EAAEG,KAAKX,YAAYM,KAAKT,cAAgBW,EAAEG,KAAKC,OAASN,KAAKT,WAAWe,OACxE,SAGJ,MAAMC,EAAe,CACjBC,WAAYnB,EAAoBa,EAAEG,KAAML,KAAKT,YAC7Cc,KAAMH,EAAEG,KACRI,UAAW,IAGTC,EAAgBR,EACtB,IAAK,MAAMS,KAAKD,EAAcE,SAAU,CACpC,MAAMC,EAAeF,EAGrB,GAAIE,EAAuB,SAAG,CAC1B,MAAMC,EAAMD,EAAuB,SACnC,IAAK,MAAME,KAAKD,EAAIE,UAAW,CAE3B,MAAMC,EAAOF,EAAE,GACf,GAA2B,IAAvBE,EAAKC,QAAQ,MAAa,CAC1B,IAAIC,EAAgBJ,EAAE,GAAG,GACzBR,EAAME,UAAU1B,KAAK,CACjByB,WAAY/B,EAAawC,GACzBG,aAAcH,EACdI,MAAOF,EAAcG,gBAMzCrB,EAAOlB,KAAKwB,GACd,MAAOgB,GAGLC,QAAQC,MAAM,6BAA6BvB,EAAEG,OAAQkB,GAG7D,OAAOtB,EAGXH,SACI,MAAM4B,EAAmBvB,SAASwB,cAAc,IAAI3B,KAAKD,kBACzD,IAAK2B,EAED,YADAF,QAAQI,KAAK,uCAAuC5B,KAAKD,kBAI7D,MAAME,EAASD,KAAK6B,YACpBL,QAAQM,IAAI,kCAAmC7B,GAC/C,IAAK,MAAM8B,KAAK9B,EAAQ,CACpB,MAAM+B,EAAiB7B,SAAS8B,cAAc,WAG9C,GAFAD,EAAeE,UAAUC,IAAIxC,GAEzBoC,EAAEvB,WAAY,CACd,MAAM4B,EAAQjC,SAAS8B,cAAc,MACrCG,EAAMF,UAAUC,IAAIvC,GACpBwC,EAAMC,YAAcN,EAAEvB,WACtBwB,EAAeM,YAAYF,GAG/B,MAAMG,EAAWvC,KAAKwC,WAAWT,EAAEtB,WACnC,IAAK,MAAMM,KAAKwB,EACZP,EAAeM,YAAYvB,GAE/BW,EAAiBY,YAAYN,cCjFzBS,EAAgBC,GAC9B,MAAMC,EAAgBxC,SAAS8B,cAAc,OAC7CU,EAAcN,YAAcK,EAC5BvC,SAASyC,KAAKN,YAAYK,GAE1B,IAAIE,EAAQ1C,SAAS2C,cACrBD,EAAME,WAAWJ,GAEjBK,OAAOC,eAAeC,QACtBF,OAAOC,eAAeE,SAASN,GAE/B,IAAIO,GAAU,EACd,IAEEA,EAAUjD,SAASkD,YAAY,QAC/B,MAAM9B,GACNC,QAAQM,IAAI,mCAAoCP,GAOlD,OAHAyB,OAAOC,eAAeK,YAAYT,GAClC1C,SAASyC,KAAKW,YAAYZ,GAEnBS,ECpBT,MAAMI,EAAgB,aAChBC,EAAmB,qBACnBC,EAAqB,0BACrBC,EAAe,oBACfC,EAAmB,+BACnBC,EAAwB,+BACxBC,EAAyB,sCACzBC,EAAwB,qCACxBC,EAAqB,2BACrBC,EAAsB,4BACtBC,EAAoB,0BACpBC,EAAoB,8BAE1B,MAAMC,UAAqBvE,EACvBC,cACIuE,MAAMZ,EAAkBD,GAG5B1D,WAAWW,GACP,MAAM6D,EAAcnE,SAAS8B,cAAc,OAC3CqC,EAAYpC,UAAUC,IAAIuB,GAC1B,IAAK,MAAMa,KAAK9D,EAAW,CAEvB,MAAM+D,EAAWrE,SAAS8B,cAAc,QACxCuC,EAAStC,UAAUC,IAAIyB,GACvBY,EAASnC,YAAckC,EAAElD,MAEzB,MAAM3C,EAAUyB,SAAS8B,cAAc,QACvCvD,EAAQwD,UAAUC,IAAI0B,GACtBnF,EAAQ2D,YAAckC,EAAEnD,aAGApB,KAAKyE,SAASzE,KAAK0E,SAASH,EAAElD,OAAQrB,KAAK0E,SAAS,YACpD1E,KAAKyE,SAASzE,KAAK0E,SAASH,EAAElD,OAAQrB,KAAK0E,SAAS,aAG1EF,EAAStC,UAAUC,IAAI4B,GACvBrF,EAAQwD,UAAUC,IAAI4B,KAEtBS,EAAStC,UAAUC,IAAI2B,GACvBpF,EAAQwD,UAAUC,IAAI2B,IAGxB,MAAMa,EAAcxE,SAAS8B,cAAc,OAC3C0C,EAAYzC,UAAUC,IAAI6B,GAC1BW,EAAYC,MAAMC,gBAAkB,OAAON,EAAEnD,gBAC7CuD,EAAYrC,YAAY5D,GACxBiG,EAAYrC,YAAYkC,GAExB,MAAMM,EAAe3E,SAAS8B,cAAc,OAC5C6C,EAAa5C,UAAUC,IAAI8B,GAE3B,MAAMc,EAAY5E,SAAS8B,cAAc,QACzC8C,EAAU7C,UAAUC,IAAI+B,GACxBa,EAAU1C,YAAckC,EAAE/D,WAE1B,MAAMwE,EAAW7E,SAAS8B,cAAc,OACxC+C,EAAS9C,UAAUC,IAAIgC,GACvBa,EAAS3C,YAAc,OAEvByC,EAAaxC,YAAYyC,GACzBD,EAAaxC,YAAY0C,GAEzB,MAAMC,EAAS9E,SAAS8B,cAAc,OACtCgD,EAAO/C,UAAUC,IAAIwB,GACrBsB,EAAO3C,YAAYqC,GACnBM,EAAO3C,YAAYwC,GACnBG,EAAOC,iBAAiB,QAAUnE,IAChCA,EAAEoE,iBAGc1C,EAAgB8B,EAAEnD,gBAEhC4D,EAAS3C,YAAc,SACvB+C,WAAW,KACTJ,EAAS3C,YAAc,QACtB,QAIPiC,EAAYhC,YAAY2C,GAE5B,MAAO,CAACX,GAGZxE,SAASuF,GAEL,IAAIC,EADa,4CACKC,KAAKF,EAAIG,QAC/B,IAAKF,EAAQ,CAIX,GADAA,EADsB,4CACCC,KAAKF,EAAIG,SAC3BF,EACH,MAAM,IAAIG,MAAM,+BAA+BJ,MAEjDC,EAAO,GAAK,GAAGA,EAAO,KAAKA,EAAO,KAClCA,EAAO,GAAK,GAAGA,EAAO,KAAKA,EAAO,KAClCA,EAAO,GAAK,GAAGA,EAAO,KAAKA,EAAO,KAEpC,MAAO,CACLI,IAAKC,SAASL,EAAO,GAAI,IACzBM,MAAOD,SAASL,EAAO,GAAI,IAC3BO,KAAMF,SAASL,EAAO,GAAI,KAI9BxF,SAASgG,EAAcC,GACrB,MAAMC,EAAIC,KAAKC,IAAKJ,EAAGJ,IAAMK,EAAGL,IAAM,GACtCO,KAAKC,IAAKJ,EAAGF,MAAQG,EAAGH,MAAQ,GAChCK,KAAKC,IAAKJ,EAAGD,KAAOE,EAAGF,KAAO,GAC9B,OAAOI,KAAKE,KAAKH,IAIzBhD,OAAOkC,iBAAiB,QAAQ,YAC5B,IAAId,GAAegC"}