{"version":3,"file":"NodeLogger.js","sources":["../../src/node/NodeLogger.ts"],"sourcesContent":["import chalk from 'chalk';\n\nimport {AbstractLogger, LoggerOpts} from '../shared/AbstractLogger';\nimport * as LogLevels from '../types/LogLevels';\nimport * as LogColors from '../types/LogColors';\n\nexport class NodeLogger extends AbstractLogger {\n  protected colorPrefix(logLevel: LogLevels.LogLevel,prefix: string): string[] {\n    const colorFunc = this.getChalkColor(logLevel);\n    return [colorFunc(prefix)];\n  }\n\n  private getChalkColor(logLevel: LogLevels.LogLevel): Function|null {\n    switch(logLevel) {\n      case LogLevels.DEBUG:\n        return chalk.hex(LogColors.DEBUG);\n      case LogLevels.INFO:\n        return chalk.hex(LogColors.INFO);\n      case LogLevels.WARN:\n        return chalk.hex(LogColors.WARN).bold;\n      case LogLevels.ERROR:\n        return chalk.hex(LogColors.ERROR).bold;\n      case LogLevels.GROUP:\n        return chalk.hex(LogColors.GROUP);\n      case LogLevels.LOG:\n      default:\n        return chalk.hex(LogColors.LOG);\n    }\n  }\n\n  protected getDefaultLogLevel(): LogLevels.LogLevel {\n    return LogLevels.LOG;\n  }\n}\n"],"names":["NodeLogger","AbstractLogger_1","[object Object]","logLevel","prefix","this","getChalkColor","colorFunc","LogLevels","DEBUG","chalk_1","hex","LogColors","INFO","WARN","bold","ERROR","GROUP","LOG","exports"],"mappings":"oEAAA,oKAMA,MAAaA,mBAAmBC,gCACpBC,YAAYC,EAA6BC,GAEjD,MAAO,CADWC,KAAKC,cAAcH,EAC7BI,CAAUH,IAGZF,cAAcC,GACpB,OAAOA,GACL,KAAKK,UAAUC,MACb,OAAOC,gBAAMC,IAAIC,UAAUH,OAC7B,KAAKD,UAAUK,KACb,OAAOH,gBAAMC,IAAIC,UAAUC,MAC7B,KAAKL,UAAUM,KACb,OAAOJ,gBAAMC,IAAIC,UAAUE,MAAMC,KACnC,KAAKP,UAAUQ,MACb,OAAON,gBAAMC,IAAIC,UAAUI,OAAOD,KACpC,KAAKP,UAAUS,MACb,OAAOP,gBAAMC,IAAIC,UAAUK,OAC7B,KAAKT,UAAUU,IACf,QACE,OAAOR,gBAAMC,IAAIC,UAAUM,MAIvBhB,qBACR,OAAOM,UAAUU,KAzBrBC"}